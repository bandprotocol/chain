syntax = "proto3";
package band.tunnel.v1beta1;

option go_package = "github.com/bandprotocol/chain/v3/x/tunnel/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

// Params is the data structure that keeps the parameters of the module.
message Params {
  option (gogoproto.equal) = true; // Use gogoproto.equal for proto3 message equality checks

  // min_deposit is the minimum deposit required to create a tunnel.
  repeated cosmos.base.v1beta1.Coin min_deposit = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  // min_interval is the minimum interval in seconds.
  uint64 min_interval = 2;
  // max_interval is the maximum interval in seconds.
  uint64 max_interval = 3;
  // min_deviation_bps is the minimum deviation in basis points.
  uint64 min_deviation_bps = 4 [(gogoproto.customname) = "MinDeviationBPS"];
  // max_deviation_bps is the maximum deviation in basis points.
  uint64 max_deviation_bps = 5 [(gogoproto.customname) = "MaxDeviationBPS"];
  // max_signals defines the maximum number of signals allowed per tunnel.
  uint64 max_signals = 6;
  // base_packet_fee is the base fee for each packet.
  repeated cosmos.base.v1beta1.Coin base_packet_fee = 7
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  // router_ibc_channel specifies the IBC channel used by the router to communicate with the tunnel module.
  string router_ibc_channel = 8 [(gogoproto.customname) = "RouterIBCChannel"];
  // router_integration_contract specifies the address of the router integration contract on the router chain
  // that the tunnel module will interact with.
  string router_integration_contract = 9 [(gogoproto.customname) = "RouterIntegrationContract"];
  // hyperlane_stride_ibc_channel specifies the IBC channel used by the hyperlane stride route to communicate with the
  // tunnel module.
  string hyperlane_stride_ibc_channel = 10 [(gogoproto.customname) = "HyperlaneStrideIBCChannel"];
  // hyperlane_integration_contract specifies the address of the hyperlane stride integration contract on the stride
  // chain that the tunnel module will interact with.
  string hyperlane_stride_integration_contract = 11 [(gogoproto.customname) = "HyperlaneStrideIntegrationContract"];
}
